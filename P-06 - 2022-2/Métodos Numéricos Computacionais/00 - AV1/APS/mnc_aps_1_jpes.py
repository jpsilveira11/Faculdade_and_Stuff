# -*- coding: utf-8 -*-
"""MNC - APS-1 - JPES.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/182lpuHC0oipBpRKrRKmg8tA_tAUUADp0

<center><h1> Métodos Numéricos Computacionais - APS-AV1 - 2022.2 </h1></center><p>


---

* Aluno: João Pedro Espechit Silveira - 2019200901
* Professor: Sérgio Assunção Monteiro
* Turma: 145R<p>
<font face="courier new" size="-1"><center><b>O código também pode ser visualizado na íntegra por meio</b><center><a href="https://colab.research.google.com/drive/182lpuHC0oipBpRKrRKmg8tA_tAUUADp0?usp=sharing">DESTE LINK</a></font>
<h1><center>Atividade</center></h1><p>
---

# Questão 1
Dada a equação <b>f(x) = x<sup>4</sup> - x<sup>3</sup> - x<sup>2</sup> + x + 8 = 0<b>, obtenha o valor
aproximado da raiz. Utilizando o método da bissecção no intervalo [-2,5; 2,5] com precisão 1E-06.
"""

#import numpy as np

def bissec(f, a, b, epsilon, maxIter = 50):
 
    Fa = f(a)
    Fb = f(b)
    
 
    if(Fa*Fb>0):
      print("Erro! A função não muda de sinal.")
      return (True, None)
    
    print("k\t  a\t\t  fa\t\t  b\t\t  fb\t\t  x\t\t  fx\t\tintervX")
    
    intervX = abs(b-a)
    x = (a+b)/2
    Fx = f(x)
    
    print("-\t%e\t%e\t%e\t%e\t%e\t%e\t%e" % (a, Fa, b, Fb, x, Fx, intervX))
    
    if(intervX<=epsilon):
      return(False,x)
    
    k=1
    
    while k <= maxIter:
      if Fa*Fx>0:
        a=x
        Fa=Fx
      else:
        b=x
        Fb=Fx
      intervX = abs(b-a)
      x = (a+b)/2
      Fx = f(x)
        
      print("%d\t%e\t%e\t%e\t%e\t%e\t%e\t%e"%(k, a, Fa, b, Fb, x, Fx, intervX))
                
      if(intervX<=epsilon):
        return(False,x)
        
      k = k+1
      
    print("ERRO! número máximo de iterações atingido.")
    return(True, x)

def f(x):
    #return x**3 - 9*x + 3
    return x**4 - x**3 - x**2 + x + 8
    #return x**4 -  x**3 - x**2 + x
    #return np.log10(x)*x - 1

#test
print(f(1))

a = -2.5
b = 2.5
#epsilon = 0.001
epsilon = 1e-06
maxIter = 100

(checkError, result) = bissec(f, a, b, epsilon, maxIter)

if checkError:
    print("O Método da Bisseção retornou um erro.")
if result is not None:
    print("Raiz encontrada: %s" % result)

"""<h1><center>Resposta</center></h1><p>

---

Como a função não corta o ponto 0 no eixo y, como demonstrado no gráfico abaixo.<p> 
Sendo assim, impossível tirar suas raízes pelo método da bissecção. 
"""

import matplotlib.pyplot as plt
x = np.linspace(-2.5,2.5)
plt.figure(dpi=70,figsize=(8,6))
plt.title("Função f(x)=x^4 - x^3 - x^2 + x + 8")
plt.grid()
plt.vlines(x=0, ymin=-5, ymax=50)
plt.hlines(y=0, xmin=-5, xmax=10)
#plt.plot(x,f(x),'bo',x,f(x),'r-')
plt.plot(x,f(x),"b-")
plt.show()

"""# Questão 2

Sejam x=[1; 3; 5; -6; 6] e sua aproximação x̄=[2; -4; 6; 8; -7]. Calcule o
erro absoluto e o erro relativo (usar x como referência)
"""

import numpy as np
from numpy.linalg import norm 
#import math

def Norm2(x,xLine):
  counter=0
  n2=0
  if len(x)!=len(xLine):
    print("Não é possível calcular a Norma 2. Arrays têm tamanhos diferentes")
    return None
  for counter in range(len(x)):
    n2=n2+(x[counter]-xLine[counter])
    #print(n2)
  #return(np.sqrt((x[0]-xLine[0]+x[1]-xLine[1]+x[2]-xLine[2]+x[3]-xLine[3]+x[4]-xLine[4])**2))
  return np.sqrt(n2**2)

def Norm(x):
  counter=0
  n=0
  for counter in range(len(x)):
    n=n+x[counter]
    #print(n)
  return np.sqrt(n**2)

def rel_Error(norm2,norm):
  return norm2/norm

def truncate(value,Range):
    temp = str(value)
    for counter in range(len(temp)):
        if temp[counter] == '.':
            try:
                return float(temp[:counter+Range+1])
            except:
                return float(temp)      
    return float(temp)

x=np.array((1,3,5,-6,6))
xLine=np.array((2,-4,6,8,-7))
print(f' x: {x}')
print(f' ̅x: {xLine}')
absError=np.sqrt(np.sum(np.square(x-xLine)))
relError=np.sqrt(np.sum(np.square(x-xLine)))/norm(x)

print(f'Erro absoluto: {absError}')
print(f'Erro absoluto aproximado: {round(absError,2)}')
print(f'Erro relativo: {relError}')
print(f'Erro relativo aproximado: {round(relError,2)}')

"""<h1><center>Resposta</center></h1><p>

---

Após a execução dos cálculos, foi possível identificar os seguntes valores:<p>
> Erro Absoluto: 20.396078054371138<p>
  Erro Relativo: 1.9717632888584062<p>
  Erro Relativo Arredondado: ≅20,40<p>
  Erro Relativo Arredondado: ≅1,97
"""